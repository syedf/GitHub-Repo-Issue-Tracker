function getRepoDetailsFromURL(e){if(e){var s=e.split("/");return{repoName:s[s.length-1],authorName:s[s.length-2]}}return 0}angular.module("GRIT",["ui.router"]),angular.module("GRIT").config(["$urlRouterProvider","$stateProvider","$locationProvider",function(e,s,t){t.html5Mode(!0),e.when("/movies/page/","/movies/page/0"),e.otherwise("/"),s.state("home",{url:"/",templateUrl:"/views/home.html",controller:"homeCtrl"})}]),angular.module("GRIT").controller("homeCtrl",["$scope","GitHubAPI",function(e,s){e.issues={},e.clear=function(){e.repoUrl="",e.issues={}},e.getIssues=function(t){t&&(s.getAllOpenIssues(t).success(function(s){e.issues.totalIssues=s.open_issues}),s.getOpenIssuesFrom24hours(t).success(function(u){e.issues.issuesInLast24Hours=u.length,s.getIssuesOpened24HoursAgoAndLessThanAWeek(t).success(function(s){e.issues.issuesInLast7Days=s.length-e.issues.issuesInLast24Hours,e.issues.issuesOpenMoreThan7daysAgo=e.issues.totalIssues-e.issues.issuesInLast7Days-e.issues.issuesInLast24Hours})}))}}]),angular.module("GRIT").service("GitHubAPI",["$http",function(e){var s=this,t="https://api.github.com/repos/";s.getAllOpenIssues=function(s){var u=getRepoDetailsFromURL(s);if(0!=u){var o=t+u.authorName+"/"+u.repoName;return e.get(o)}},s.getOpenIssuesFrom24hours=function(s){var u=getRepoDetailsFromURL(s);if(0!=u){var o=new Date((new Date).getTime()-864e5),r=t+u.authorName+"/"+u.repoName+"/issues?since="+o.toISOString();return e.get(r)}},s.getIssuesOpened24HoursAgoAndLessThanAWeek=function(s){var u=getRepoDetailsFromURL(s);if(0!=u){var o=new Date,r=new Date(o.getTime()-6048e5),n=t+u.authorName+"/"+u.repoName+"/issues?per_page=100&since="+r.toISOString();return e.get(n)}}}]);